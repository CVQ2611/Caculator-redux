{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  currentExpresstion: '',\n  history: [],\n  resuilt: 0\n};\nexport const expresstionSlice = createSlice({\n  name: 'expresstion',\n  initialState,\n  reducers: {\n    ADD_NUMBER: (state, action) => {\n      state.currentExpresstion += action.payload;\n    },\n    ADD_OPERATION: (state, action) => {\n      state.currentExpresstion += action.payload;\n    },\n    RESTORE_EXPRESSTION: (state, action) => {\n      if (action.payload === 'AC') {\n        state.currentExpresstion = '';\n      } else if (action.payload === 'C') {\n        state.currentExpresstion = state.currentExpresstion.substring(0, state.currentExpresstion.length - 1);\n      } else if (action.payload === '=') {\n        console.log('bang');\n        state.resuilt = eval(new String(state.currentExpresstion));\n      }\n    },\n    ADD_HISTORY: (state, action) => {\n      state.history.push(action.payload);\n    }\n  }\n});\nexport default expresstionSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentExpresstion","history","resuilt","expresstionSlice","name","reducers","ADD_NUMBER","state","action","payload","ADD_OPERATION","RESTORE_EXPRESSTION","substring","length","console","log","eval","String","ADD_HISTORY","push","reducer"],"sources":["/home/vu/Documents/redux-caculator/src/reducer/addCurrentExpresstion.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    currentExpresstion: '',\n    history: [],\n    resuilt: 0,\n}\n\n\nexport const expresstionSlice = createSlice({\n    name: 'expresstion',\n    initialState,\n    reducers: {\n        ADD_NUMBER: (state, action) => {\n            state.currentExpresstion += action.payload\n        },\n        ADD_OPERATION: (state, action) => {\n            state.currentExpresstion += action.payload\n        },\n        RESTORE_EXPRESSTION: (state, action) => {\n            if (action.payload === 'AC') {\n                state.currentExpresstion = ''\n            } else if (action.payload === 'C') {\n                state.currentExpresstion = state.currentExpresstion.substring(0, state.currentExpresstion.length - 1)\n            } else if (action.payload === '=') {\n                console.log('bang');\n                state.resuilt = eval(new String(state.currentExpresstion))\n            }\n        },\n        ADD_HISTORY: (state, action) => {\n            state.history.push(action.payload)\n        }\n    }\n})\n\nexport default expresstionSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,kBAAkB,EAAE,EAAE;EACtBC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE;AACb,CAAC;AAGD,OAAO,MAAMC,gBAAgB,GAAGL,WAAW,CAAC;EACxCM,IAAI,EAAE,aAAa;EACnBL,YAAY;EACZM,QAAQ,EAAE;IACNC,UAAU,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACP,kBAAkB,IAAIQ,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDC,aAAa,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACP,kBAAkB,IAAIQ,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDE,mBAAmB,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACpC,IAAIA,MAAM,CAACC,OAAO,KAAK,IAAI,EAAE;QACzBF,KAAK,CAACP,kBAAkB,GAAG,EAAE;MACjC,CAAC,MAAM,IAAIQ,MAAM,CAACC,OAAO,KAAK,GAAG,EAAE;QAC/BF,KAAK,CAACP,kBAAkB,GAAGO,KAAK,CAACP,kBAAkB,CAACY,SAAS,CAAC,CAAC,EAAEL,KAAK,CAACP,kBAAkB,CAACa,MAAM,GAAG,CAAC,CAAC;MACzG,CAAC,MAAM,IAAIL,MAAM,CAACC,OAAO,KAAK,GAAG,EAAE;QAC/BK,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACnBR,KAAK,CAACL,OAAO,GAAGc,IAAI,CAAC,IAAIC,MAAM,CAACV,KAAK,CAACP,kBAAkB,CAAC,CAAC;MAC9D;IACJ,CAAC;IACDkB,WAAW,EAAE,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACN,OAAO,CAACkB,IAAI,CAACX,MAAM,CAACC,OAAO,CAAC;IACtC;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeN,gBAAgB,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}