{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  currentExpresstion: '',\n  history: []\n};\nconsole.log(state.currentExpresstion.lastIndexOf());\nexport const expresstionSlice = createSlice({\n  name: 'expresstion',\n  initialState,\n  reducers: {\n    ADD_NUMBER: (state, action) => {\n      state.currentExpresstion += action.payload;\n    },\n    ADD_OPERATION: (state, action) => {\n      state.currentExpresstion += action.payload;\n    },\n    RESTORE_EXPRESSTION: (state, action) => {\n      if (action.payload === 'AC') {\n        state.currentExpresstion = '';\n      } else if (action.payload === 'C') {\n        state.currentExpresstion.slice(state.currentExpresstion.lastIndexOf());\n      }\n    },\n    ADD_HISTORY: (state, action) => {\n      state.history.push(action.payload);\n    }\n  }\n});\nexport default expresstionSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentExpresstion","history","console","log","state","lastIndexOf","expresstionSlice","name","reducers","ADD_NUMBER","action","payload","ADD_OPERATION","RESTORE_EXPRESSTION","slice","ADD_HISTORY","push","reducer"],"sources":["/home/vu/Documents/redux-caculator/src/reducer/addCurrentExpresstion.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    currentExpresstion: '',\n    history: []\n}\n\nconsole.log(state.currentExpresstion.lastIndexOf());\n\nexport const expresstionSlice = createSlice({\n    name: 'expresstion',\n    initialState,\n    reducers: {\n        ADD_NUMBER: (state, action) => {\n            state.currentExpresstion += action.payload\n        },\n        ADD_OPERATION: (state, action) => {\n            state.currentExpresstion += action.payload\n        },\n        RESTORE_EXPRESSTION: (state, action) => {\n            if (action.payload === 'AC') {\n                state.currentExpresstion = ''\n            } else if (action.payload === 'C') {\n                state.currentExpresstion.slice(state.currentExpresstion.lastIndexOf())\n            }\n        },\n        ADD_HISTORY: (state, action) => {\n            state.history.push(action.payload)\n        }\n    }\n})\n\nexport default expresstionSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,kBAAkB,EAAE,EAAE;EACtBC,OAAO,EAAE;AACb,CAAC;AAEDC,OAAO,CAACC,GAAG,CAACC,KAAK,CAACJ,kBAAkB,CAACK,WAAW,EAAE,CAAC;AAEnD,OAAO,MAAMC,gBAAgB,GAAGR,WAAW,CAAC;EACxCS,IAAI,EAAE,aAAa;EACnBR,YAAY;EACZS,QAAQ,EAAE;IACNC,UAAU,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC3BN,KAAK,CAACJ,kBAAkB,IAAIU,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDC,aAAa,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC9BN,KAAK,CAACJ,kBAAkB,IAAIU,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDE,mBAAmB,EAAE,CAACT,KAAK,EAAEM,MAAM,KAAK;MACpC,IAAIA,MAAM,CAACC,OAAO,KAAK,IAAI,EAAE;QACzBP,KAAK,CAACJ,kBAAkB,GAAG,EAAE;MACjC,CAAC,MAAM,IAAIU,MAAM,CAACC,OAAO,KAAK,GAAG,EAAE;QAC/BP,KAAK,CAACJ,kBAAkB,CAACc,KAAK,CAACV,KAAK,CAACJ,kBAAkB,CAACK,WAAW,EAAE,CAAC;MAC1E;IACJ,CAAC;IACDU,WAAW,EAAE,CAACX,KAAK,EAAEM,MAAM,KAAK;MAC5BN,KAAK,CAACH,OAAO,CAACe,IAAI,CAACN,MAAM,CAACC,OAAO,CAAC;IACtC;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeL,gBAAgB,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}