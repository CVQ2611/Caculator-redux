{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  currentExpresstion: '',\n  history: [],\n  resuilt: 0\n};\nexport const expresstionSlice = createSlice({\n  name: 'expresstion',\n  initialState,\n  reducers: {\n    ADD_NUMBER: (state, action) => {\n      state.currentExpresstion += action.payload;\n    },\n    ADD_OPERATION: (state, action) => {\n      const operationCheck = state.currentExpresstion.slice(-1) === '-' || state.currentExpresstion.slice(-1) === '+' || state.currentExpresstion.slice(-1) === '*' || state.currentExpresstion.slice(-1) === '/';\n      if (operationCheck) {\n        return;\n      } else {\n        state.currentExpresstion += action.payload;\n      }\n    },\n    RESTORE_EXPRESSTION: (state, action) => {\n      if (action.payload === 'AC') {\n        state.currentExpresstion = '';\n        state.resuilt = 0;\n      } else if (action.payload === 'C') {\n        state.currentExpresstion = state.currentExpresstion.substring(0, state.currentExpresstion.length - 1);\n        if (state.currentExpresstion.length === 0) {\n          state.resuilt = 0;\n        }\n      } else if (action.payload === '=') {\n        state.resuilt = eval(state.currentExpresstion);\n      }\n    },\n    ADD_HISTORY: state => {\n      state.history.push(`${state.currentExpresstion} = ${state.resuilt}`);\n    },\n    ADD_ONCHANGE_INPUT: (state, action) => {\n      state.currentExpresstion = action.payload;\n    }\n  }\n});\nexport default expresstionSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentExpresstion","history","resuilt","expresstionSlice","name","reducers","ADD_NUMBER","state","action","payload","ADD_OPERATION","operationCheck","slice","RESTORE_EXPRESSTION","substring","length","eval","ADD_HISTORY","push","ADD_ONCHANGE_INPUT","reducer"],"sources":["/home/vu/Documents/redux-caculator/src/reducer/addCurrentExpresstion.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    currentExpresstion: '',\n    history: [],\n    resuilt: 0,\n}\n\nexport const expresstionSlice = createSlice({\n    name: 'expresstion',\n    initialState,\n    reducers: {\n        ADD_NUMBER: (state, action) => {\n            state.currentExpresstion += action.payload\n        },\n        ADD_OPERATION: (state, action) => {\n            const operationCheck = state.currentExpresstion.slice(-1) === '-'\n                || state.currentExpresstion.slice(-1) === '+'\n                || state.currentExpresstion.slice(-1) === '*'\n                || state.currentExpresstion.slice(-1) === '/'\n            if (operationCheck) {\n                return\n            } else {\n                state.currentExpresstion += action.payload\n            }\n        },\n        RESTORE_EXPRESSTION: (state, action) => {\n            if (action.payload === 'AC') {\n                state.currentExpresstion = '';\n                state.resuilt = 0;\n            } else if (action.payload === 'C') {\n                state.currentExpresstion = state.currentExpresstion.substring(0, state.currentExpresstion.length - 1)\n                if (state.currentExpresstion.length === 0) {\n                    state.resuilt = 0;\n                }\n            } else if (action.payload === '=') {\n                state.resuilt = eval(state.currentExpresstion);\n            }\n        },\n        ADD_HISTORY: (state) => {\n            state.history.push(`${state.currentExpresstion} = ${state.resuilt}`)\n        },\n        ADD_ONCHANGE_INPUT: (state, action) => {\n            state.currentExpresstion = action.payload\n        }\n    }\n})\n\nexport default expresstionSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,kBAAkB,EAAE,EAAE;EACtBC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGL,WAAW,CAAC;EACxCM,IAAI,EAAE,aAAa;EACnBL,YAAY;EACZM,QAAQ,EAAE;IACNC,UAAU,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACP,kBAAkB,IAAIQ,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDC,aAAa,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMG,cAAc,GAAGJ,KAAK,CAACP,kBAAkB,CAACY,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAC1DL,KAAK,CAACP,kBAAkB,CAACY,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAC1CL,KAAK,CAACP,kBAAkB,CAACY,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAC1CL,KAAK,CAACP,kBAAkB,CAACY,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG;MACjD,IAAID,cAAc,EAAE;QAChB;MACJ,CAAC,MAAM;QACHJ,KAAK,CAACP,kBAAkB,IAAIQ,MAAM,CAACC,OAAO;MAC9C;IACJ,CAAC;IACDI,mBAAmB,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACpC,IAAIA,MAAM,CAACC,OAAO,KAAK,IAAI,EAAE;QACzBF,KAAK,CAACP,kBAAkB,GAAG,EAAE;QAC7BO,KAAK,CAACL,OAAO,GAAG,CAAC;MACrB,CAAC,MAAM,IAAIM,MAAM,CAACC,OAAO,KAAK,GAAG,EAAE;QAC/BF,KAAK,CAACP,kBAAkB,GAAGO,KAAK,CAACP,kBAAkB,CAACc,SAAS,CAAC,CAAC,EAAEP,KAAK,CAACP,kBAAkB,CAACe,MAAM,GAAG,CAAC,CAAC;QACrG,IAAIR,KAAK,CAACP,kBAAkB,CAACe,MAAM,KAAK,CAAC,EAAE;UACvCR,KAAK,CAACL,OAAO,GAAG,CAAC;QACrB;MACJ,CAAC,MAAM,IAAIM,MAAM,CAACC,OAAO,KAAK,GAAG,EAAE;QAC/BF,KAAK,CAACL,OAAO,GAAGc,IAAI,CAACT,KAAK,CAACP,kBAAkB,CAAC;MAClD;IACJ,CAAC;IACDiB,WAAW,EAAGV,KAAK,IAAK;MACpBA,KAAK,CAACN,OAAO,CAACiB,IAAI,CAAE,GAAEX,KAAK,CAACP,kBAAmB,MAAKO,KAAK,CAACL,OAAQ,EAAC,CAAC;IACxE,CAAC;IACDiB,kBAAkB,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAK;MACnCD,KAAK,CAACP,kBAAkB,GAAGQ,MAAM,CAACC,OAAO;IAC7C;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeN,gBAAgB,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}